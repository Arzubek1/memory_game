"use client";
import React, { FC, useState } from "react";
import scss from "./AllPages.module.scss";
import { useAppDispatch } from "@/hooks";
import { handleCorrect, handleScore } from "@/toolkit/testSlice";
import { GrFormNextLink } from "react-icons/gr";

const variants: string[] = [
  "A) –í–æ–∑—Ä–∞—Å—Ç",
  "B) –®–∞—Ä–∏–∫",
  "C) –î—Ä–æ–Ω",
  "D) –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º",
];
interface TestProps {
  onNext?: () => void;
}
const Page1: FC<TestProps> = ({ onNext }) => {
  const [isDisabled, setIsDisabled] = useState(false);
  const [answers, setAnswers] = useState(false);
  const dispatch = useAppDispatch();
  const handleChoose = (choose: string) => {
    setAnswers(true)
    if (choose === "A) –í–æ–∑—Ä–∞—Å—Ç") {
      dispatch(handleScore());
    }
    if (isDisabled) return;
    setIsDisabled(true);
    dispatch(handleCorrect(true));
    setTimeout(() => {
      dispatch(handleCorrect(false));
    }, 700);
  };
  return (
    <div className={scss.block}>
      <div className={scss.text}>
        <h4>–ù–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h4>
        <p>
          {!answers
            ? "–ß—Ç–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è?"
            : "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: A) –í–æ–∑—Ä–∞—Å—Ç ‚Äî —Ä–∞—Å—Ç—ë—Ç, –Ω–æ –Ω–µ –ø–∞–¥–∞–µ—Ç (–µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–µ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ üòÑ)."}
        </p>
      </div>
      <div className={scss.varinats}>
        {variants.map((el, idx) => (
          <button
            key={idx}
            disabled={isDisabled}
            onClick={() => handleChoose(el)}
          >
            {el}
          </button>
        ))}
        <h5 onClick={() => onNext?.()}>–°–ª–µ–¥—é—à–∏–π <GrFormNextLink /></h5>
      </div>
    </div>
  );
};

export default Page1;
