"use client";
import React, { FC, useState } from "react";
import scss from "./AllPages.module.scss";
import { useAppSelector, useAppDispatch } from "@/hooks";
import { handleCorrect, handleScore } from "@/toolkit/testSlice";
import { GrFormNextLink } from "react-icons/gr";
import { useRouter } from "next/navigation";

const variants: string[] = [
  "A) –ü–µ—Ä–≤—É—é ‚Äî —è —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –≤—Å—ë, –¥–∞–∂–µ –µ—Å–ª–∏ –∑–∞–±—É–¥—É, –∑–∞—á–µ–º",
  "B) –í—Ç–æ—Ä—É—é ‚Äî –ª—É—á—à–µ –ø–æ–∫–æ–π –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å, —á–µ–º —Ö–∞–æ—Å –∂–µ–ª–∞–Ω–∏–π.",
  "C) –¢—Ä–µ—Ç—å—é ‚Äî —Ä–∏—Å–∫–Ω—É –≤—Å–µ–º —Ä–∞–¥–∏ –Ω–æ–≤–æ–≥–æ —à–∞–Ω—Å–∞.",
  "D) –ù–∏–∫–∞–∫—É—é ‚Äî —è –æ—Å—Ç–∞–Ω—É—Å—å –∏ –ø–æ—Å–º–æ—Ç—Ä—é, –∫—Ç–æ –≤–æ–π–¥—ë—Ç –ø–µ—Ä–≤—ã–º.",
];

interface TestProps {
  onNext?: () => void;
}

const Page10: FC<TestProps> = ({ onNext }) => {
  const [isDisabled, setIsDisabled] = useState(false);
  const [answers, setAnswers] = useState(false);
  const [showResult, setShowResult] = useState(false);
  const router = useRouter();

  const dispatch = useAppDispatch();
  const score = useAppSelector((state) => state.testStore.score);

  const handleChoose = (choose: string) => {
    setAnswers(true);
    if (
      choose === "A) –ü–µ—Ä–≤—É—é ‚Äî —è —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –≤—Å—ë, –¥–∞–∂–µ –µ—Å–ª–∏ –∑–∞–±—É–¥—É, –∑–∞—á–µ–º" ||
      choose === "B) –í—Ç–æ—Ä—É—é ‚Äî –ª—É—á—à–µ –ø–æ–∫–æ–π –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å, —á–µ–º —Ö–∞–æ—Å –∂–µ–ª–∞–Ω–∏–π." ||
      choose === "C) –¢—Ä–µ—Ç—å—é ‚Äî —Ä–∏—Å–∫–Ω—É –≤—Å–µ–º —Ä–∞–¥–∏ –Ω–æ–≤–æ–≥–æ —à–∞–Ω—Å–∞." ||
      choose === "D) –ù–∏–∫–∞–∫—É—é ‚Äî —è –æ—Å—Ç–∞–Ω—É—Å—å –∏ –ø–æ—Å–º–æ—Ç—Ä—é, –∫—Ç–æ –≤–æ–π–¥—ë—Ç –ø–µ—Ä–≤—ã–º."
    ) {
      dispatch(handleScore());
    }
    if (isDisabled) return;
    setIsDisabled(true);
    dispatch(handleCorrect(true));
    setTimeout(() => {
      dispatch(handleCorrect(false));
    }, 700);
  };

  const handleResult = () => {
    setShowResult(true);
  };

  const iq = 100 + (score - 5) * 6;

  const getIQLevel = (iq: number) => {
    if (iq < 85)
      return "üßÉ –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ ‚Äî –Ω–æ —É —Ç–µ–±—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª!";
    if (iq < 100) return "üôÇ –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ.";
    if (iq < 115) return "ü§ì –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ ‚Äî –≥–∏–±–∫–∏–π —É–º –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.";
    if (iq < 130) return "üöÄ –í—ã—Å–æ–∫–∏–π IQ ‚Äî —Ç—ã –º—ã—Å–ª—è—â–∏–π —Å–∏—Å—Ç–µ–º–Ω–æ –∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ.";
    return "üß† –ì–µ–Ω–∏–π! –¢—ã –¥—É–º–∞–µ—à—å –≤–Ω–µ –ø—Ä–∏–≤—ã—á–Ω—ã—Ö —Ä–∞–º–æ–∫!";
  };

  return (
    <div className={`${scss.block} ${scss.page10}`}>
      {!showResult ? (
        <>
          <div className={scss.text}>
            <h4>¬´–ü–∞—Ä–∞–¥–æ–∫—Å –≤—ã–±–æ—Ä–∞¬ª</h4>
            <p>
              {!answers
                ? "–¢—ã —Å—Ç–æ–∏—à—å –ø–µ—Ä–µ–¥ —Ç—Ä–µ–º—è –¥–≤–µ—Ä—è–º–∏: –ó–∞ –ø–µ—Ä–≤–æ–π ‚Äî –≤—Å—ë, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å, –Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞ —Ç–µ—Ä—è–µ—à—å –ø–∞–º—è—Ç—å. –ó–∞ –≤—Ç–æ—Ä–æ–π ‚Äî –Ω–∏—á–µ–≥–æ, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—à—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –º—É–¥—Ä–æ—Å—Ç—å. –ó–∞ —Ç—Ä–µ—Ç—å–µ–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∂–∏–∑–Ω—å –∑–∞–Ω–æ–≤–æ, –Ω–æ —Å –ø–æ–ª–Ω–æ–π –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å—é. –ö–∞–∫—É—é –¥–≤–µ—Ä—å –≤—ã–±–µ—Ä–µ—à—å?"
                : "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç ‚Äî –Ω–æ –µ—Å—Ç—å –≥–ª—É–±–∏–Ω–∞ –≤—ã–±–æ—Ä–∞. A) ‚Äî –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã–π —É–º. B) ‚Äî —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å. C) ‚Äî –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å. D) ‚Äî –∞–Ω–∞–ª–∏—Ç–∏–∫ –≤–Ω–µ —Å–∏—Å—Ç–µ–º—ã."}
            </p>
          </div>

          <div className={scss.varinats}>
            {variants.map((el, idx) => (
              <button
                key={idx}
                disabled={isDisabled}
                onClick={() => handleChoose(el)}
              >
                {el}
              </button>
            ))}
            <h5 onClick={handleResult}>
              –†–µ–∑—É–ª—å—Ç–∞—Ç <GrFormNextLink />
            </h5>
          </div>
        </>
      ) : (
        <div className={scss.resultBlock}>
          <h3>üéØ –¢–≤–æ–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h3>
          <p>
            –£ —Ç–µ–±—è <span>{score}</span> –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–∑ <b>10</b> –≤–æ–∑–º–æ–∂–Ω—ã—Ö!
          </p>
          <p>
            –ü—Ä–∏–º–µ—Ä–Ω—ã–π IQ: <b>{iq}</b>
          </p>
          <h4>{getIQLevel(iq)}</h4>
          <button onClick={() => router.push("/")}>–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
        </div>
      )}
    </div>
  );
};

export default Page10;
